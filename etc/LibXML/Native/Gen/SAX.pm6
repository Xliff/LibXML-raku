use v6;
#  -- DO NOT EDIT --
# generated by: etc/generator.p6 

unit module LibXML::Native::Gen::SAX;
# Old SAX version 1 handler, deprecated:
#    DEPRECATED set of SAX version 1 interfaces used to build the DOM tree. 
use LibXML::Native::Defs :LIB, :XmlCharP;

sub attribute(Pointer $ctx, xmlCharP $fullname, xmlCharP $value) is native(LIB) {*};
sub attributeDecl(Pointer $ctx, xmlCharP $elem, xmlCharP $fullname, int32 $type, int32 $def, xmlCharP $defaultValue, xmlEnumeration $tree) is native(LIB) {*};
sub cdataBlock(Pointer $ctx, xmlCharP $value, int32 $len) is native(LIB) {*};
sub characters(Pointer $ctx, xmlCharP $ch, int32 $len) is native(LIB) {*};
sub checkNamespace(Pointer $ctx, xmlCharP $namespace --> int32) is native(LIB) {*};
sub comment(Pointer $ctx, xmlCharP $value) is native(LIB) {*};
sub elementDecl(Pointer $ctx, xmlCharP $name, int32 $type, xmlElementContent $content) is native(LIB) {*};
sub endDocument(Pointer $ctx) is native(LIB) {*};
sub endElement(Pointer $ctx, xmlCharP $name) is native(LIB) {*};
sub entityDecl(Pointer $ctx, xmlCharP $name, int32 $type, xmlCharP $publicId, xmlCharP $systemId, xmlCharP $content) is native(LIB) {*};
sub externalSubset(Pointer $ctx, xmlCharP $name, xmlCharP $ExternalID, xmlCharP $SystemID) is native(LIB) {*};
sub getColumnNumber(Pointer $ctx --> int32) is native(LIB) {*};
sub getLineNumber(Pointer $ctx --> int32) is native(LIB) {*};
sub getPublicId(Pointer $ctx --> xmlCharP) is native(LIB) {*};
sub getSystemId(Pointer $ctx --> xmlCharP) is native(LIB) {*};
sub globalNamespace(Pointer $ctx, xmlCharP $href, xmlCharP $prefix) is native(LIB) {*};
sub hasExternalSubset(Pointer $ctx --> int32) is native(LIB) {*};
sub hasInternalSubset(Pointer $ctx --> int32) is native(LIB) {*};
sub ignorableWhitespace(Pointer $ctx, xmlCharP $ch, int32 $len) is native(LIB) {*};
sub initdocbDefaultSAXHandler(xmlSAXHandlerV1 * $hdlr) is native(LIB) {*};
sub inithtmlDefaultSAXHandler(xmlSAXHandlerV1 * $hdlr) is native(LIB) {*};
sub initxmlDefaultSAXHandler(xmlSAXHandlerV1 * $hdlr, int32 $warning) is native(LIB) {*};
sub internalSubset(Pointer $ctx, xmlCharP $name, xmlCharP $ExternalID, xmlCharP $SystemID) is native(LIB) {*};
sub isStandalone(Pointer $ctx --> int32) is native(LIB) {*};
sub namespaceDecl(Pointer $ctx, xmlCharP $href, xmlCharP $prefix) is native(LIB) {*};
sub notationDecl(Pointer $ctx, xmlCharP $name, xmlCharP $publicId, xmlCharP $systemId) is native(LIB) {*};
sub processingInstruction(Pointer $ctx, xmlCharP $target, xmlCharP $data) is native(LIB) {*};
sub reference(Pointer $ctx, xmlCharP $name) is native(LIB) {*};
sub setDocumentLocator(Pointer $ctx, xmlSAXLocator $loc) is native(LIB) {*};
sub setNamespace(Pointer $ctx, xmlCharP $name) is native(LIB) {*};
sub startDocument(Pointer $ctx) is native(LIB) {*};
sub startElement(Pointer $ctx, xmlCharP $fullname, const xmlChar ** $atts) is native(LIB) {*};
sub unparsedEntityDecl(Pointer $ctx, xmlCharP $name, xmlCharP $publicId, xmlCharP $systemId, xmlCharP $notationName) is native(LIB) {*};
