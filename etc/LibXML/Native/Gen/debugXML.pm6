use v6;
#  -- DO NOT EDIT --
# generated by: etc/generator.p6 

unit module LibXML::Native::Gen::debugXML;
# Tree debugging APIs:
#    Interfaces to a set of routines used for debugging the tree produced by the XML parser. 
use LibXML::Native::Defs :LIB, :XmlCharP;

struct xmlShellCtxt is repr('CStruct') {
    has Str $.filename;
    has xmlDocPtr $.doc;
    has xmlNodePtr $.node;
    has xmlXPathContextPtr $.pctxt;
    has int32 $.loaded;
    has FILE * $.output;
    has xmlShellReadlineFunc $.input;
}

sub xmlBoolToText(int32 $boolval --> Str) is native(LIB) {*};
sub xmlDebugCheckDocument(FILE * $output, xmlDocPtr $doc --> int32) is native(LIB) {*};
sub xmlDebugDumpAttr(FILE * $output, xmlAttrPtr $attr, int32 $depth) is native(LIB) {*};
sub xmlDebugDumpAttrList(FILE * $output, xmlAttrPtr $attr, int32 $depth) is native(LIB) {*};
sub xmlDebugDumpDTD(FILE * $output, xmlDtdPtr $dtd) is native(LIB) {*};
sub xmlDebugDumpDocument(FILE * $output, xmlDocPtr $doc) is native(LIB) {*};
sub xmlDebugDumpDocumentHead(FILE * $output, xmlDocPtr $doc) is native(LIB) {*};
sub xmlDebugDumpEntities(FILE * $output, xmlDocPtr $doc) is native(LIB) {*};
sub xmlDebugDumpNode(FILE * $output, xmlNodePtr $node, int32 $depth) is native(LIB) {*};
sub xmlDebugDumpNodeList(FILE * $output, xmlNodePtr $node, int32 $depth) is native(LIB) {*};
sub xmlDebugDumpOneNode(FILE * $output, xmlNodePtr $node, int32 $depth) is native(LIB) {*};
sub xmlDebugDumpString(FILE * $output, xmlCharP $str) is native(LIB) {*};
sub xmlLsCountNode(xmlNodePtr $node --> int32) is native(LIB) {*};
sub xmlLsOneNode(FILE * $output, xmlNodePtr $node) is native(LIB) {*};
sub xmlShell(xmlDocPtr $doc, Str $filename, xmlShellReadlineFunc $input, FILE * $output) is native(LIB) {*};
sub xmlShellBase(xmlShellCtxtPtr $ctxt, Str $arg, xmlNodePtr $node, xmlNodePtr $node2 --> int32) is native(LIB) {*};
sub xmlShellCat(xmlShellCtxtPtr $ctxt, Str $arg, xmlNodePtr $node, xmlNodePtr $node2 --> int32) is native(LIB) {*};
sub xmlShellDir(xmlShellCtxtPtr $ctxt, Str $arg, xmlNodePtr $node, xmlNodePtr $node2 --> int32) is native(LIB) {*};
sub xmlShellDu(xmlShellCtxtPtr $ctxt, Str $arg, xmlNodePtr $tree, xmlNodePtr $node2 --> int32) is native(LIB) {*};
sub xmlShellList(xmlShellCtxtPtr $ctxt, Str $arg, xmlNodePtr $node, xmlNodePtr $node2 --> int32) is native(LIB) {*};
sub xmlShellLoad(xmlShellCtxtPtr $ctxt, Str $filename, xmlNodePtr $node, xmlNodePtr $node2 --> int32) is native(LIB) {*};
sub xmlShellPrintNode(xmlNodePtr $node) is native(LIB) {*};
sub xmlShellPrintXPathError(int32 $errorType, Str $arg) is native(LIB) {*};
sub xmlShellPrintXPathResult(xmlXPathObjectPtr $list) is native(LIB) {*};
sub xmlShellPwd(xmlShellCtxtPtr $ctxt, Str $buffer, xmlNodePtr $node, xmlNodePtr $node2 --> int32) is native(LIB) {*};
sub xmlShellSave(xmlShellCtxtPtr $ctxt, Str $filename, xmlNodePtr $node, xmlNodePtr $node2 --> int32) is native(LIB) {*};
sub xmlShellValidate(xmlShellCtxtPtr $ctxt, Str $dtd, xmlNodePtr $node, xmlNodePtr $node2 --> int32) is native(LIB) {*};
sub xmlShellWrite(xmlShellCtxtPtr $ctxt, Str $filename, xmlNodePtr $node, xmlNodePtr $node2 --> int32) is native(LIB) {*};
