use v6;
#  -- DO NOT EDIT --
# generated by: etc/generator.p6 

unit module LibXML::Native::Gen::dict;
# string dictionary:
#    dictionary of reusable strings, just used to avoid allocation and freeing operations. 
use LibXML::Native::Defs :LIB, :XmlCharP;

struct xmlDict is repr('CPointer') {
}

sub xmlDictCleanup() is native(LIB) {*};
sub xmlDictCreate( --> xmlDictPtr) is native(LIB) {*};
sub xmlDictCreateSub(xmlDictPtr $sub --> xmlDictPtr) is native(LIB) {*};
sub xmlDictExists(xmlDictPtr $dict, xmlCharP $name, int32 $len --> xmlCharP) is native(LIB) {*};
sub xmlDictFree(xmlDictPtr $dict) is native(LIB) {*};
sub xmlDictGetUsage(xmlDictPtr $dict --> size_t) is native(LIB) {*};
sub xmlDictLookup(xmlDictPtr $dict, xmlCharP $name, int32 $len --> xmlCharP) is native(LIB) {*};
sub xmlDictOwns(xmlDictPtr $dict, xmlCharP $str --> int32) is native(LIB) {*};
sub xmlDictQLookup(xmlDictPtr $dict, xmlCharP $prefix, xmlCharP $name --> xmlCharP) is native(LIB) {*};
sub xmlDictReference(xmlDictPtr $dict --> int32) is native(LIB) {*};
sub xmlDictSetLimit(xmlDictPtr $dict, size_t $limit --> size_t) is native(LIB) {*};
sub xmlDictSize(xmlDictPtr $dict --> int32) is native(LIB) {*};
sub xmlInitializeDict( --> int32) is native(LIB) {*};
