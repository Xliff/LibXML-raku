use v6;
#  -- DO NOT EDIT --
# generated by: etc/generator.p6 

unit module LibXML::Native::Gen::list;
# lists interfaces:
#    this module implement the list support used in various place in the library. 
use LibXML::Native::Defs :LIB, :XmlCharP;

struct xmlLink is repr('CPointer') {
    method xmlLinkGetData( --> Pointer) is native(LIB) {*};
}

struct xmlList is repr('CPointer') {
    sub xmlListCreate(xmlListDeallocator $deallocator, xmlListDataCompare $compare --> xmlList) is native(LIB) {*};
    sub xmlListDup(const xmlList $old --> xmlList) is native(LIB) {*};

    method xmlListAppend(Pointer $data --> int32) is native(LIB) {*};
    method xmlListClear() is native(LIB) {*};
    method xmlListCopy(const xmlList $old --> int32) is native(LIB) {*};
    method xmlListDelete() is native(LIB) {*};
    method xmlListEmpty( --> int32) is native(LIB) {*};
    method xmlListEnd( --> xmlLink) is native(LIB) {*};
    method xmlListFront( --> xmlLink) is native(LIB) {*};
    method xmlListInsert(Pointer $data --> int32) is native(LIB) {*};
    method xmlListMerge(xmlList $l2) is native(LIB) {*};
    method xmlListPopBack() is native(LIB) {*};
    method xmlListPopFront() is native(LIB) {*};
    method xmlListPushBack(Pointer $data --> int32) is native(LIB) {*};
    method xmlListPushFront(Pointer $data --> int32) is native(LIB) {*};
    method xmlListRemoveAll(Pointer $data --> int32) is native(LIB) {*};
    method xmlListRemoveFirst(Pointer $data --> int32) is native(LIB) {*};
    method xmlListRemoveLast(Pointer $data --> int32) is native(LIB) {*};
    method xmlListReverse() is native(LIB) {*};
    method xmlListReverseSearch(Pointer $data --> Pointer) is native(LIB) {*};
    method xmlListReverseWalk(xmlListWalker $walker, Pointer $user) is native(LIB) {*};
    method xmlListSearch(Pointer $data --> Pointer) is native(LIB) {*};
    method xmlListSize( --> int32) is native(LIB) {*};
    method xmlListSort() is native(LIB) {*};
    method xmlListWalk(xmlListWalker $walker, Pointer $user) is native(LIB) {*};
}
