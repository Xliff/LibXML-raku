use v6;
#  -- DO NOT EDIT --
# generated by: etc/generator.p6 

unit module LibXML::Native::Gen::list;
# lists interfaces:
#    this module implement the list support used in various place in the library. 
use LibXML::Native::Defs :LIB, :XmlCharP;

struct xmlLink is repr('CPointer') {
}

struct xmlList is repr('CPointer') {
}

sub xmlLinkGetData(xmlLinkPtr $lk --> Pointer) is native(LIB) {*};
sub xmlListAppend(xmlListPtr $l, Pointer $data --> int32) is native(LIB) {*};
sub xmlListClear(xmlListPtr $l) is native(LIB) {*};
sub xmlListCopy(xmlListPtr $cur, const xmlListPtr $old --> int32) is native(LIB) {*};
sub xmlListCreate(xmlListDeallocator $deallocator, xmlListDataCompare $compare --> xmlListPtr) is native(LIB) {*};
sub xmlListDelete(xmlListPtr $l) is native(LIB) {*};
sub xmlListDup(const xmlListPtr $old --> xmlListPtr) is native(LIB) {*};
sub xmlListEmpty(xmlListPtr $l --> int32) is native(LIB) {*};
sub xmlListEnd(xmlListPtr $l --> xmlLinkPtr) is native(LIB) {*};
sub xmlListFront(xmlListPtr $l --> xmlLinkPtr) is native(LIB) {*};
sub xmlListInsert(xmlListPtr $l, Pointer $data --> int32) is native(LIB) {*};
sub xmlListMerge(xmlListPtr $l1, xmlListPtr $l2) is native(LIB) {*};
sub xmlListPopBack(xmlListPtr $l) is native(LIB) {*};
sub xmlListPopFront(xmlListPtr $l) is native(LIB) {*};
sub xmlListPushBack(xmlListPtr $l, Pointer $data --> int32) is native(LIB) {*};
sub xmlListPushFront(xmlListPtr $l, Pointer $data --> int32) is native(LIB) {*};
sub xmlListRemoveAll(xmlListPtr $l, Pointer $data --> int32) is native(LIB) {*};
sub xmlListRemoveFirst(xmlListPtr $l, Pointer $data --> int32) is native(LIB) {*};
sub xmlListRemoveLast(xmlListPtr $l, Pointer $data --> int32) is native(LIB) {*};
sub xmlListReverse(xmlListPtr $l) is native(LIB) {*};
sub xmlListReverseSearch(xmlListPtr $l, Pointer $data --> Pointer) is native(LIB) {*};
sub xmlListReverseWalk(xmlListPtr $l, xmlListWalker $walker, Pointer $user) is native(LIB) {*};
sub xmlListSearch(xmlListPtr $l, Pointer $data --> Pointer) is native(LIB) {*};
sub xmlListSize(xmlListPtr $l --> int32) is native(LIB) {*};
sub xmlListSort(xmlListPtr $l) is native(LIB) {*};
sub xmlListWalk(xmlListPtr $l, xmlListWalker $walker, Pointer $user) is native(LIB) {*};
