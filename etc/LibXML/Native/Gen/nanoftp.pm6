use v6;
#  -- DO NOT EDIT --
# generated by: etc/generator.p6 

unit module LibXML::Native::Gen::nanoftp;
# minimal FTP implementation:
#    minimal FTP implementation allowing to fetch resources like external subset. 
use LibXML::Native::Defs :LIB, :xmlCharP;

sub xmlNanoFTPCheckResponse(Pointer $ctx --> int32) is native(LIB) is export {*};
sub xmlNanoFTPCleanup() is native(LIB) is export {*};
sub xmlNanoFTPClose(Pointer $ctx --> int32) is native(LIB) is export {*};
sub xmlNanoFTPCloseConnection(Pointer $ctx --> int32) is native(LIB) is export {*};
sub xmlNanoFTPConnect(Pointer $ctx --> int32) is native(LIB) is export {*};
sub xmlNanoFTPConnectTo(Str $server, int32 $port --> Pointer) is native(LIB) is export {*};
sub xmlNanoFTPCwd(Pointer $ctx, Str $directory --> int32) is native(LIB) is export {*};
sub xmlNanoFTPDele(Pointer $ctx, Str $file --> int32) is native(LIB) is export {*};
sub xmlNanoFTPFreeCtxt(Pointer $ctx) is native(LIB) is export {*};
sub xmlNanoFTPGet(Pointer $ctx, ftpDataCallback $callback, Pointer $userData, Str $filename --> int32) is native(LIB) is export {*};
sub xmlNanoFTPGetConnection(Pointer $ctx --> SOCKET) is native(LIB) is export {*};
sub xmlNanoFTPGetResponse(Pointer $ctx --> int32) is native(LIB) is export {*};
sub xmlNanoFTPGetSocket(Pointer $ctx, Str $filename --> SOCKET) is native(LIB) is export {*};
sub xmlNanoFTPInit() is native(LIB) is export {*};
sub xmlNanoFTPList(Pointer $ctx, ftpListCallback $callback, Pointer $userData, Str $filename --> int32) is native(LIB) is export {*};
sub xmlNanoFTPNewCtxt(Str $URL --> Pointer) is native(LIB) is export {*};
sub xmlNanoFTPOpen(Str $URL --> Pointer) is native(LIB) is export {*};
sub xmlNanoFTPProxy(Str $host, int32 $port, Str $user, Str $passwd, int32 $type) is native(LIB) is export {*};
sub xmlNanoFTPQuit(Pointer $ctx --> int32) is native(LIB) is export {*};
sub xmlNanoFTPRead(Pointer $ctx, Pointer $dest, int32 $len --> int32) is native(LIB) is export {*};
sub xmlNanoFTPScanProxy(Str $URL) is native(LIB) is export {*};
sub xmlNanoFTPUpdateURL(Pointer $ctx, Str $URL --> int32) is native(LIB) is export {*};
