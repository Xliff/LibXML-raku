use v6;
#  -- DO NOT EDIT --
# generated by: etc/generator.p6 

unit module LibXML::Native::Gen::parser;
# the core parser module:
#    Interfaces, constants and types related to the XML parser 
use LibXML::Native::Defs :LIB, :XmlCharP;

enum xmlFeature is export {
    XML_WITH_AUTOMATA => 23,
    XML_WITH_C14N => 14,
    XML_WITH_CATALOG => 15,
    XML_WITH_DEBUG => 28,
    XML_WITH_DEBUG_MEM => 29,
    XML_WITH_DEBUG_RUN => 30,
    XML_WITH_EXPR => 24,
    XML_WITH_FTP => 9,
    XML_WITH_HTML => 12,
    XML_WITH_HTTP => 10,
    XML_WITH_ICONV => 19,
    XML_WITH_ICU => 32,
    XML_WITH_ISO8859X => 20,
    XML_WITH_LEGACY => 13,
    XML_WITH_LZMA => 33,
    XML_WITH_MODULES => 27,
    XML_WITH_NONE => 99999,
    XML_WITH_OUTPUT => 3,
    XML_WITH_PATTERN => 6,
    XML_WITH_PUSH => 4,
    XML_WITH_READER => 5,
    XML_WITH_REGEXP => 22,
    XML_WITH_SAX1 => 8,
    XML_WITH_SCHEMAS => 25,
    XML_WITH_SCHEMATRON => 26,
    XML_WITH_THREAD => 1,
    XML_WITH_TREE => 2,
    XML_WITH_UNICODE => 21,
    XML_WITH_VALID => 11,
    XML_WITH_WRITER => 7,
    XML_WITH_XINCLUDE => 18,
    XML_WITH_XPATH => 16,
    XML_WITH_XPTR => 17,
    XML_WITH_ZLIB => 31,
}

enum xmlParserInputState is export {
    XML_PARSER_ATTRIBUTE_VALUE => 12,
    XML_PARSER_CDATA_SECTION => 8,
    XML_PARSER_COMMENT => 5,
    XML_PARSER_CONTENT => 7,
    XML_PARSER_DTD => 3,
    XML_PARSER_END_TAG => 9,
    XML_PARSER_ENTITY_DECL => 10,
    XML_PARSER_ENTITY_VALUE => 11,
    XML_PARSER_EOF => -1,
    XML_PARSER_EPILOG => 14,
    XML_PARSER_IGNORE => 15,
    XML_PARSER_MISC => 1,
    XML_PARSER_PI => 2,
    XML_PARSER_PROLOG => 4,
    XML_PARSER_PUBLIC_LITERAL => 16,
    XML_PARSER_START => 0,
    XML_PARSER_START_TAG => 6,
    XML_PARSER_SYSTEM_LITERAL => 13,
}

enum xmlParserMode is export {
    XML_PARSE_DOM => 1,
    XML_PARSE_PUSH_DOM => 3,
    XML_PARSE_PUSH_SAX => 4,
    XML_PARSE_READER => 5,
    XML_PARSE_SAX => 2,
    XML_PARSE_UNKNOWN => 0,
}

enum xmlParserOption is export {
    XML_PARSE_BIG_LINES => 4194304,
    XML_PARSE_COMPACT => 65536,
    XML_PARSE_DTDATTR => 8,
    XML_PARSE_DTDLOAD => 4,
    XML_PARSE_DTDVALID => 16,
    XML_PARSE_HUGE => 524288,
    XML_PARSE_IGNORE_ENC => 2097152,
    XML_PARSE_NOBASEFIX => 262144,
    XML_PARSE_NOBLANKS => 256,
    XML_PARSE_NOCDATA => 16384,
    XML_PARSE_NODICT => 4096,
    XML_PARSE_NOENT => 2,
    XML_PARSE_NOERROR => 32,
    XML_PARSE_NONET => 2048,
    XML_PARSE_NOWARNING => 64,
    XML_PARSE_NOXINCNODE => 32768,
    XML_PARSE_NSCLEAN => 8192,
    XML_PARSE_OLD10 => 131072,
    XML_PARSE_OLDSAX => 1048576,
    XML_PARSE_PEDANTIC => 128,
    XML_PARSE_RECOVER => 1,
    XML_PARSE_SAX1 => 512,
    XML_PARSE_XINCLUDE => 1024,
}

struct xmlParserNodeInfo is repr('CStruct') {
    has const struct _xmlNode * $.node; # Position & line # that text that created the node begins & ends on
    has unsigned long $.begin_pos;
    has unsigned long $.begin_line;
    has unsigned long $.end_pos;
    has unsigned long $.end_line;
}

struct xmlParserNodeInfoSeq is repr('CStruct') {
    has unsigned long $.maximum;
    has unsigned long $.length;
    has xmlParserNodeInfo * $.buffer;
}

struct xmlSAXHandlerV1 is repr('CStruct') {
    has internalSubsetSAXFunc $.internalSubset;
    has isStandaloneSAXFunc $.isStandalone;
    has hasInternalSubsetSAXFunc $.hasInternalSubset;
    has hasExternalSubsetSAXFunc $.hasExternalSubset;
    has resolveEntitySAXFunc $.resolveEntity;
    has getEntitySAXFunc $.getEntity;
    has entityDeclSAXFunc $.entityDecl;
    has notationDeclSAXFunc $.notationDecl;
    has attributeDeclSAXFunc $.attributeDecl;
    has elementDeclSAXFunc $.elementDecl;
    has unparsedEntityDeclSAXFunc $.unparsedEntityDecl;
    has setDocumentLocatorSAXFunc $.setDocumentLocator;
    has startDocumentSAXFunc $.startDocument;
    has endDocumentSAXFunc $.endDocument;
    has startElementSAXFunc $.startElement;
    has endElementSAXFunc $.endElement;
    has referenceSAXFunc $.reference;
    has charactersSAXFunc $.characters;
    has ignorableWhitespaceSAXFunc $.ignorableWhitespace;
    has processingInstructionSAXFunc $.processingInstruction;
    has commentSAXFunc $.comment;
    has warningSAXFunc $.warning;
    has errorSAXFunc $.error;
    has fatalErrorSAXFunc $.fatalError; # unused error() get all the errors
    has getParameterEntitySAXFunc $.getParameterEntity;
    has cdataBlockSAXFunc $.cdataBlock;
    has externalSubsetSAXFunc $.externalSubset;
    has uint32 $.initialized;
}

sub xmlByteConsumed(xmlParserCtxtPtr $ctxt --> long) is native(LIB) {*};
sub xmlCleanupParser() is native(LIB) {*};
sub xmlClearNodeInfoSeq(xmlParserNodeInfoSeqPtr $seq) is native(LIB) {*};
sub xmlClearParserCtxt(xmlParserCtxtPtr $ctxt) is native(LIB) {*};
sub xmlCreateDocParserCtxt(xmlCharP $cur --> xmlParserCtxtPtr) is native(LIB) {*};
sub xmlCreateIOParserCtxt(xmlSAXHandlerPtr $sax, Pointer $user_data, xmlInputReadCallback $ioread, xmlInputCloseCallback $ioclose, Pointer $ioctx, xmlCharEncoding $enc --> xmlParserCtxtPtr) is native(LIB) {*};
sub xmlCreatePushParserCtxt(xmlSAXHandlerPtr $sax, Pointer $user_data, Str $chunk, int32 $size, Str $filename --> xmlParserCtxtPtr) is native(LIB) {*};
sub xmlCtxtReadDoc(xmlParserCtxtPtr $ctxt, xmlCharP $cur, Str $URL, Str $encoding, int32 $options --> xmlDocPtr) is native(LIB) {*};
sub xmlCtxtReadFd(xmlParserCtxtPtr $ctxt, int32 $fd, Str $URL, Str $encoding, int32 $options --> xmlDocPtr) is native(LIB) {*};
sub xmlCtxtReadFile(xmlParserCtxtPtr $ctxt, Str $filename, Str $encoding, int32 $options --> xmlDocPtr) is native(LIB) {*};
sub xmlCtxtReadIO(xmlParserCtxtPtr $ctxt, xmlInputReadCallback $ioread, xmlInputCloseCallback $ioclose, Pointer $ioctx, Str $URL, Str $encoding, int32 $options --> xmlDocPtr) is native(LIB) {*};
sub xmlCtxtReadMemory(xmlParserCtxtPtr $ctxt, Str $buffer, int32 $size, Str $URL, Str $encoding, int32 $options --> xmlDocPtr) is native(LIB) {*};
sub xmlCtxtReset(xmlParserCtxtPtr $ctxt) is native(LIB) {*};
sub xmlCtxtResetPush(xmlParserCtxtPtr $ctxt, Str $chunk, int32 $size, Str $filename, Str $encoding --> int32) is native(LIB) {*};
sub xmlCtxtUseOptions(xmlParserCtxtPtr $ctxt, int32 $options --> int32) is native(LIB) {*};
sub xmlFreeParserCtxt(xmlParserCtxtPtr $ctxt) is native(LIB) {*};
sub xmlGetExternalEntityLoader( --> xmlExternalEntityLoader) is native(LIB) {*};
sub xmlGetFeature(xmlParserCtxtPtr $ctxt, Str $name, Pointer $result --> int32) is native(LIB) {*};
sub xmlGetFeaturesList(Pointer[int32] $len, const char ** $result --> int32) is native(LIB) {*};
sub xmlHasFeature(xmlFeature $feature --> int32) is native(LIB) {*};
sub xmlIOParseDTD(xmlSAXHandlerPtr $sax, xmlParserInputBufferPtr $input, xmlCharEncoding $enc --> xmlDtdPtr) is native(LIB) {*};
sub xmlInitNodeInfoSeq(xmlParserNodeInfoSeqPtr $seq) is native(LIB) {*};
sub xmlInitParser() is native(LIB) {*};
sub xmlInitParserCtxt(xmlParserCtxtPtr $ctxt --> int32) is native(LIB) {*};
sub xmlKeepBlanksDefault(int32 $val --> int32) is native(LIB) {*};
sub xmlLineNumbersDefault(int32 $val --> int32) is native(LIB) {*};
sub xmlLoadExternalEntity(Str $URL, Str $ID, xmlParserCtxtPtr $ctxt --> xmlParserInputPtr) is native(LIB) {*};
sub xmlNewIOInputStream(xmlParserCtxtPtr $ctxt, xmlParserInputBufferPtr $input, xmlCharEncoding $enc --> xmlParserInputPtr) is native(LIB) {*};
sub xmlNewParserCtxt( --> xmlParserCtxtPtr) is native(LIB) {*};
sub xmlParseBalancedChunkMemory(xmlDocPtr $doc, xmlSAXHandlerPtr $sax, Pointer $user_data, int32 $depth, xmlCharP $string, xmlNodePtr * $lst --> int32) is native(LIB) {*};
sub xmlParseBalancedChunkMemoryRecover(xmlDocPtr $doc, xmlSAXHandlerPtr $sax, Pointer $user_data, int32 $depth, xmlCharP $string, xmlNodePtr * $lst, int32 $recover --> int32) is native(LIB) {*};
sub xmlParseChunk(xmlParserCtxtPtr $ctxt, Str $chunk, int32 $size, int32 $terminate --> int32) is native(LIB) {*};
sub xmlParseCtxtExternalEntity(xmlParserCtxtPtr $ctx, xmlCharP $URL, xmlCharP $ID, xmlNodePtr * $lst --> int32) is native(LIB) {*};
sub xmlParseDTD(xmlCharP $ExternalID, xmlCharP $SystemID --> xmlDtdPtr) is native(LIB) {*};
sub xmlParseDoc(xmlCharP $cur --> xmlDocPtr) is native(LIB) {*};
sub xmlParseDocument(xmlParserCtxtPtr $ctxt --> int32) is native(LIB) {*};
sub xmlParseEntity(Str $filename --> xmlDocPtr) is native(LIB) {*};
sub xmlParseExtParsedEnt(xmlParserCtxtPtr $ctxt --> int32) is native(LIB) {*};
sub xmlParseExternalEntity(xmlDocPtr $doc, xmlSAXHandlerPtr $sax, Pointer $user_data, int32 $depth, xmlCharP $URL, xmlCharP $ID, xmlNodePtr * $lst --> int32) is native(LIB) {*};
sub xmlParseFile(Str $filename --> xmlDocPtr) is native(LIB) {*};
sub xmlParseInNodeContext(xmlNodePtr $node, Str $data, int32 $datalen, int32 $options, xmlNodePtr * $lst --> xmlParserErrors) is native(LIB) {*};
sub xmlParseMemory(Str $buffer, int32 $size --> xmlDocPtr) is native(LIB) {*};
sub xmlParserAddNodeInfo(xmlParserCtxtPtr $ctxt, const xmlParserNodeInfoPtr $info) is native(LIB) {*};
sub xmlParserFindNodeInfo(const xmlParserCtxtPtr $ctx, const xmlNodePtr $node --> const xmlParserNodeInfo *) is native(LIB) {*};
sub xmlParserFindNodeInfoIndex(const xmlParserNodeInfoSeqPtr $seq, const xmlNodePtr $node --> unsigned long) is native(LIB) {*};
sub xmlParserInputGrow(xmlParserInputPtr $in, int32 $len --> int32) is native(LIB) {*};
sub xmlParserInputRead(xmlParserInputPtr $in, int32 $len --> int32) is native(LIB) {*};
sub xmlPedanticParserDefault(int32 $val --> int32) is native(LIB) {*};
sub xmlReadDoc(xmlCharP $cur, Str $URL, Str $encoding, int32 $options --> xmlDocPtr) is native(LIB) {*};
sub xmlReadFd(int32 $fd, Str $URL, Str $encoding, int32 $options --> xmlDocPtr) is native(LIB) {*};
sub xmlReadFile(Str $filename, Str $encoding, int32 $options --> xmlDocPtr) is native(LIB) {*};
sub xmlReadIO(xmlInputReadCallback $ioread, xmlInputCloseCallback $ioclose, Pointer $ioctx, Str $URL, Str $encoding, int32 $options --> xmlDocPtr) is native(LIB) {*};
sub xmlReadMemory(Str $buffer, int32 $size, Str $URL, Str $encoding, int32 $options --> xmlDocPtr) is native(LIB) {*};
sub xmlRecoverDoc(xmlCharP $cur --> xmlDocPtr) is native(LIB) {*};
sub xmlRecoverFile(Str $filename --> xmlDocPtr) is native(LIB) {*};
sub xmlRecoverMemory(Str $buffer, int32 $size --> xmlDocPtr) is native(LIB) {*};
sub xmlSAXParseDTD(xmlSAXHandlerPtr $sax, xmlCharP $ExternalID, xmlCharP $SystemID --> xmlDtdPtr) is native(LIB) {*};
sub xmlSAXParseDoc(xmlSAXHandlerPtr $sax, xmlCharP $cur, int32 $recovery --> xmlDocPtr) is native(LIB) {*};
sub xmlSAXParseEntity(xmlSAXHandlerPtr $sax, Str $filename --> xmlDocPtr) is native(LIB) {*};
sub xmlSAXParseFile(xmlSAXHandlerPtr $sax, Str $filename, int32 $recovery --> xmlDocPtr) is native(LIB) {*};
sub xmlSAXParseFileWithData(xmlSAXHandlerPtr $sax, Str $filename, int32 $recovery, Pointer $data --> xmlDocPtr) is native(LIB) {*};
sub xmlSAXParseMemory(xmlSAXHandlerPtr $sax, Str $buffer, int32 $size, int32 $recovery --> xmlDocPtr) is native(LIB) {*};
sub xmlSAXParseMemoryWithData(xmlSAXHandlerPtr $sax, Str $buffer, int32 $size, int32 $recovery, Pointer $data --> xmlDocPtr) is native(LIB) {*};
sub xmlSAXUserParseFile(xmlSAXHandlerPtr $sax, Pointer $user_data, Str $filename --> int32) is native(LIB) {*};
sub xmlSAXUserParseMemory(xmlSAXHandlerPtr $sax, Pointer $user_data, Str $buffer, int32 $size --> int32) is native(LIB) {*};
sub xmlSetExternalEntityLoader(xmlExternalEntityLoader $f) is native(LIB) {*};
sub xmlSetFeature(xmlParserCtxtPtr $ctxt, Str $name, Pointer $value --> int32) is native(LIB) {*};
sub xmlSetupParserForBuffer(xmlParserCtxtPtr $ctxt, xmlCharP $buffer, Str $filename) is native(LIB) {*};
sub xmlStopParser(xmlParserCtxtPtr $ctxt) is native(LIB) {*};
sub xmlSubstituteEntitiesDefault(int32 $val --> int32) is native(LIB) {*};
