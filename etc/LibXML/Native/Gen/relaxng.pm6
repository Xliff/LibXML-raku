use v6;
#  -- DO NOT EDIT --
# generated by: etc/generator.p6 

unit module LibXML::Native::Gen::relaxng;
# implementation of the Relax-NG validation:
#    implementation of the Relax-NG validation 
use LibXML::Native::Defs :LIB, :XmlCharP;

enum xmlRelaxNGParserFlag is export {
    XML_RELAXNGP_CRNG => 2,
    XML_RELAXNGP_FREE_DOC => 1,
    XML_RELAXNGP_NONE => 0,
}

enum xmlRelaxNGValidErr is export {
    XML_RELAXNG_ERR_ATTREXTRANS => 20,
    XML_RELAXNG_ERR_ATTRNAME => 14,
    XML_RELAXNG_ERR_ATTRNONS => 16,
    XML_RELAXNG_ERR_ATTRVALID => 24,
    XML_RELAXNG_ERR_ATTRWRONGNS => 18,
    XML_RELAXNG_ERR_CONTENTVALID => 25,
    XML_RELAXNG_ERR_DATAELEM => 28,
    XML_RELAXNG_ERR_DATATYPE => 31,
    XML_RELAXNG_ERR_DUPID => 4,
    XML_RELAXNG_ERR_ELEMEXTRANS => 19,
    XML_RELAXNG_ERR_ELEMNAME => 13,
    XML_RELAXNG_ERR_ELEMNONS => 15,
    XML_RELAXNG_ERR_ELEMNOTEMPTY => 21,
    XML_RELAXNG_ERR_ELEMWRONG => 38,
    XML_RELAXNG_ERR_ELEMWRONGNS => 17,
    XML_RELAXNG_ERR_EXTRACONTENT => 26,
    XML_RELAXNG_ERR_EXTRADATA => 35,
    XML_RELAXNG_ERR_INTEREXTRA => 12,
    XML_RELAXNG_ERR_INTERNAL => 37,
    XML_RELAXNG_ERR_INTERNODATA => 10,
    XML_RELAXNG_ERR_INTERSEQ => 11,
    XML_RELAXNG_ERR_INVALIDATTR => 27,
    XML_RELAXNG_ERR_LACKDATA => 36,
    XML_RELAXNG_ERR_LIST => 33,
    XML_RELAXNG_ERR_LISTELEM => 30,
    XML_RELAXNG_ERR_LISTEMPTY => 9,
    XML_RELAXNG_ERR_LISTEXTRA => 8,
    XML_RELAXNG_ERR_MEMORY => 1,
    XML_RELAXNG_ERR_NODEFINE => 7,
    XML_RELAXNG_ERR_NOELEM => 22,
    XML_RELAXNG_ERR_NOGRAMMAR => 34,
    XML_RELAXNG_ERR_NOSTATE => 6,
    XML_RELAXNG_ERR_NOTELEM => 23,
    XML_RELAXNG_ERR_TEXTWRONG => 39,
    XML_RELAXNG_ERR_TYPE => 2,
    XML_RELAXNG_ERR_TYPECMP => 5,
    XML_RELAXNG_ERR_TYPEVAL => 3,
    XML_RELAXNG_ERR_VALELEM => 29,
    XML_RELAXNG_ERR_VALUE => 32,
    XML_RELAXNG_OK => 0,
}

struct xmlRelaxNG is repr('CPointer') {
}

struct xmlRelaxNGParserCtxt is repr('CPointer') {
}

struct xmlRelaxNGValidCtxt is repr('CPointer') {
}

sub xmlRelaxNGCleanupTypes() is native(LIB) {*};
sub xmlRelaxNGDump(FILE * $output, xmlRelaxNGPtr $schema) is native(LIB) {*};
sub xmlRelaxNGDumpTree(FILE * $output, xmlRelaxNGPtr $schema) is native(LIB) {*};
sub xmlRelaxNGFree(xmlRelaxNGPtr $schema) is native(LIB) {*};
sub xmlRelaxNGFreeParserCtxt(xmlRelaxNGParserCtxtPtr $ctxt) is native(LIB) {*};
sub xmlRelaxNGFreeValidCtxt(xmlRelaxNGValidCtxtPtr $ctxt) is native(LIB) {*};
sub xmlRelaxNGGetParserErrors(xmlRelaxNGParserCtxtPtr $ctxt, xmlRelaxNGValidityErrorFunc * $err, xmlRelaxNGValidityWarningFunc * $warn, void ** $ctx --> int32) is native(LIB) {*};
sub xmlRelaxNGGetValidErrors(xmlRelaxNGValidCtxtPtr $ctxt, xmlRelaxNGValidityErrorFunc * $err, xmlRelaxNGValidityWarningFunc * $warn, void ** $ctx --> int32) is native(LIB) {*};
sub xmlRelaxNGInitTypes( --> int32) is native(LIB) {*};
sub xmlRelaxNGNewDocParserCtxt(xmlDocPtr $doc --> xmlRelaxNGParserCtxtPtr) is native(LIB) {*};
sub xmlRelaxNGNewMemParserCtxt(Str $buffer, int32 $size --> xmlRelaxNGParserCtxtPtr) is native(LIB) {*};
sub xmlRelaxNGNewParserCtxt(Str $URL --> xmlRelaxNGParserCtxtPtr) is native(LIB) {*};
sub xmlRelaxNGNewValidCtxt(xmlRelaxNGPtr $schema --> xmlRelaxNGValidCtxtPtr) is native(LIB) {*};
sub xmlRelaxNGParse(xmlRelaxNGParserCtxtPtr $ctxt --> xmlRelaxNGPtr) is native(LIB) {*};
sub xmlRelaxNGSetParserErrors(xmlRelaxNGParserCtxtPtr $ctxt, xmlRelaxNGValidityErrorFunc $err, xmlRelaxNGValidityWarningFunc $warn, Pointer $ctx) is native(LIB) {*};
sub xmlRelaxNGSetParserStructuredErrors(xmlRelaxNGParserCtxtPtr $ctxt, xmlStructuredErrorFunc $serror, Pointer $ctx) is native(LIB) {*};
sub xmlRelaxNGSetValidErrors(xmlRelaxNGValidCtxtPtr $ctxt, xmlRelaxNGValidityErrorFunc $err, xmlRelaxNGValidityWarningFunc $warn, Pointer $ctx) is native(LIB) {*};
sub xmlRelaxNGSetValidStructuredErrors(xmlRelaxNGValidCtxtPtr $ctxt, xmlStructuredErrorFunc $serror, Pointer $ctx) is native(LIB) {*};
sub xmlRelaxNGValidateDoc(xmlRelaxNGValidCtxtPtr $ctxt, xmlDocPtr $doc --> int32) is native(LIB) {*};
sub xmlRelaxNGValidateFullElement(xmlRelaxNGValidCtxtPtr $ctxt, xmlDocPtr $doc, xmlNodePtr $elem --> int32) is native(LIB) {*};
sub xmlRelaxNGValidatePopElement(xmlRelaxNGValidCtxtPtr $ctxt, xmlDocPtr $doc, xmlNodePtr $elem --> int32) is native(LIB) {*};
sub xmlRelaxNGValidatePushCData(xmlRelaxNGValidCtxtPtr $ctxt, xmlCharP $data, int32 $len --> int32) is native(LIB) {*};
sub xmlRelaxNGValidatePushElement(xmlRelaxNGValidCtxtPtr $ctxt, xmlDocPtr $doc, xmlNodePtr $elem --> int32) is native(LIB) {*};
sub xmlRelaxParserSetFlag(xmlRelaxNGParserCtxtPtr $ctxt, int32 $flags --> int32) is native(LIB) {*};
