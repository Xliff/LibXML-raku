use v6;
#  -- DO NOT EDIT --
# generated by: etc/generator.p6 

unit module LibXML::Native::Gen::xinclude;
# implementation of XInclude:
#    API to handle XInclude processing, implements the World Wide Web Consortium Last Call Working Draft 10 November 2003
use LibXML::Native::Defs :LIB, :XmlCharP;

struct xmlXIncludeCtxt is repr('CPointer') {
}

sub xmlXIncludeFreeContext(xmlXIncludeCtxtPtr $ctxt) is native(LIB) {*};
sub xmlXIncludeNewContext(xmlDocPtr $doc --> xmlXIncludeCtxtPtr) is native(LIB) {*};
sub xmlXIncludeProcess(xmlDocPtr $doc --> int32) is native(LIB) {*};
sub xmlXIncludeProcessFlags(xmlDocPtr $doc, int32 $flags --> int32) is native(LIB) {*};
sub xmlXIncludeProcessFlagsData(xmlDocPtr $doc, int32 $flags, Pointer $data --> int32) is native(LIB) {*};
sub xmlXIncludeProcessNode(xmlXIncludeCtxtPtr $ctxt, xmlNodePtr $node --> int32) is native(LIB) {*};
sub xmlXIncludeProcessTree(xmlNodePtr $tree --> int32) is native(LIB) {*};
sub xmlXIncludeProcessTreeFlags(xmlNodePtr $tree, int32 $flags --> int32) is native(LIB) {*};
sub xmlXIncludeProcessTreeFlagsData(xmlNodePtr $tree, int32 $flags, Pointer $data --> int32) is native(LIB) {*};
sub xmlXIncludeSetFlags(xmlXIncludeCtxtPtr $ctxt, int32 $flags --> int32) is native(LIB) {*};
