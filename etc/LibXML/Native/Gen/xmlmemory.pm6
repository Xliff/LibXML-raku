use v6;
#  -- DO NOT EDIT --
# generated by: etc/generator.p6 

unit module LibXML::Native::Gen::xmlmemory;
# interface for the memory allocator:
#    provides interfaces for the memory allocator, including debugging capabilities. 
use LibXML::Native::Defs :LIB, :XmlCharP;

sub xmlCleanupMemory() is native(LIB) {*};
sub xmlGcMemGet(xmlFreeFunc * $freeFunc, xmlMallocFunc * $mallocFunc, xmlMallocFunc * $mallocAtomicFunc, xmlReallocFunc * $reallocFunc, xmlStrdupFunc * $strdupFunc --> int32) is native(LIB) {*};
sub xmlGcMemSetup(xmlFreeFunc $freeFunc, xmlMallocFunc $mallocFunc, xmlMallocFunc $mallocAtomicFunc, xmlReallocFunc $reallocFunc, xmlStrdupFunc $strdupFunc --> int32) is native(LIB) {*};
sub xmlInitMemory( --> int32) is native(LIB) {*};
sub xmlMallocAtomicLoc(size_t $size, Str $file, int32 $line --> Pointer) is native(LIB) {*};
sub xmlMallocLoc(size_t $size, Str $file, int32 $line --> Pointer) is native(LIB) {*};
sub xmlMemBlocks( --> int32) is native(LIB) {*};
sub xmlMemDisplay(FILE * $fp) is native(LIB) {*};
sub xmlMemDisplayLast(FILE * $fp, long $nbBytes) is native(LIB) {*};
sub xmlMemFree(Pointer $ptr) is native(LIB) {*};
sub xmlMemGet(xmlFreeFunc * $freeFunc, xmlMallocFunc * $mallocFunc, xmlReallocFunc * $reallocFunc, xmlStrdupFunc * $strdupFunc --> int32) is native(LIB) {*};
sub xmlMemMalloc(size_t $size --> Pointer) is native(LIB) {*};
sub xmlMemRealloc(Pointer $ptr, size_t $size --> Pointer) is native(LIB) {*};
sub xmlMemSetup(xmlFreeFunc $freeFunc, xmlMallocFunc $mallocFunc, xmlReallocFunc $reallocFunc, xmlStrdupFunc $strdupFunc --> int32) is native(LIB) {*};
sub xmlMemShow(FILE * $fp, int32 $nr) is native(LIB) {*};
sub xmlMemStrdupLoc(Str $str, Str $file, int32 $line --> Str) is native(LIB) {*};
sub xmlMemUsed( --> int32) is native(LIB) {*};
sub xmlMemoryDump() is native(LIB) {*};
sub xmlMemoryStrdup(Str $str --> Str) is native(LIB) {*};
sub xmlReallocLoc(Pointer $ptr, size_t $size, Str $file, int32 $line --> Pointer) is native(LIB) {*};
