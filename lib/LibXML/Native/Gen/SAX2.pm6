use v6;
#  -- DO NOT EDIT --
# generated by: etc/generator.p6 

unit module LibXML::Native::Gen::SAX2;
# SAX2 parser interface used to build the DOM tree:
#    those are the default SAX2 interfaces used by the library when building DOM tree. 
use LibXML::Native::Defs :LIB, :XmlCharP;
    sub docbDefaultSAXHandlerInit( --> void) is native(LIB) {*};
    sub htmlDefaultSAXHandlerInit( --> void) is native(LIB) {*};
    sub xmlDefaultSAXHandlerInit( --> void) is native(LIB) {*};
    sub xmlSAX2AttributeDecl(Pointer $ctx, xmlCharP $elem, xmlCharP $fullname, int32 $type, int32 $def, xmlCharP $defaultValue, xmlEnumeration $tree --> void) is native(LIB) {*};
    sub xmlSAX2CDataBlock(Pointer $ctx, xmlCharP $value, int32 $len --> void) is native(LIB) {*};
    sub xmlSAX2Characters(Pointer $ctx, xmlCharP $ch, int32 $len --> void) is native(LIB) {*};
    sub xmlSAX2Comment(Pointer $ctx, xmlCharP $value --> void) is native(LIB) {*};
    sub xmlSAX2ElementDecl(Pointer $ctx, xmlCharP $name, int32 $type, xmlElementContent $content --> void) is native(LIB) {*};
    sub xmlSAX2EndDocument(Pointer $ctx --> void) is native(LIB) {*};
    sub xmlSAX2EndElement(Pointer $ctx, xmlCharP $name --> void) is native(LIB) {*};
    sub xmlSAX2EndElementNs(Pointer $ctx, xmlCharP $localname, xmlCharP $prefix, xmlCharP $URI --> void) is native(LIB) {*};
    sub xmlSAX2EntityDecl(Pointer $ctx, xmlCharP $name, int32 $type, xmlCharP $publicId, xmlCharP $systemId, xmlCharP $content --> void) is native(LIB) {*};
    sub xmlSAX2ExternalSubset(Pointer $ctx, xmlCharP $name, xmlCharP $ExternalID, xmlCharP $SystemID --> void) is native(LIB) {*};
    sub xmlSAX2GetColumnNumber(Pointer $ctx --> int32) is native(LIB) {*};
    sub xmlSAX2GetLineNumber(Pointer $ctx --> int32) is native(LIB) {*};
    sub xmlSAX2GetPublicId(Pointer $ctx --> xmlCharP) is native(LIB) {*};
    sub xmlSAX2GetSystemId(Pointer $ctx --> xmlCharP) is native(LIB) {*};
    sub xmlSAX2HasExternalSubset(Pointer $ctx --> int32) is native(LIB) {*};
    sub xmlSAX2HasInternalSubset(Pointer $ctx --> int32) is native(LIB) {*};
    sub xmlSAX2IgnorableWhitespace(Pointer $ctx, xmlCharP $ch, int32 $len --> void) is native(LIB) {*};
    sub xmlSAX2InitDefaultSAXHandler(xmlSAXHandler * $hdlr, int32 $warning --> void) is native(LIB) {*};
    sub xmlSAX2InitDocbDefaultSAXHandler(xmlSAXHandler * $hdlr --> void) is native(LIB) {*};
    sub xmlSAX2InitHtmlDefaultSAXHandler(xmlSAXHandler * $hdlr --> void) is native(LIB) {*};
    sub xmlSAX2InternalSubset(Pointer $ctx, xmlCharP $name, xmlCharP $ExternalID, xmlCharP $SystemID --> void) is native(LIB) {*};
    sub xmlSAX2IsStandalone(Pointer $ctx --> int32) is native(LIB) {*};
    sub xmlSAX2NotationDecl(Pointer $ctx, xmlCharP $name, xmlCharP $publicId, xmlCharP $systemId --> void) is native(LIB) {*};
    sub xmlSAX2ProcessingInstruction(Pointer $ctx, xmlCharP $target, xmlCharP $data --> void) is native(LIB) {*};
    sub xmlSAX2Reference(Pointer $ctx, xmlCharP $name --> void) is native(LIB) {*};
    sub xmlSAX2SetDocumentLocator(Pointer $ctx, xmlSAXLocator $loc --> void) is native(LIB) {*};
    sub xmlSAX2StartDocument(Pointer $ctx --> void) is native(LIB) {*};
    sub xmlSAX2StartElement(Pointer $ctx, xmlCharP $fullname, const xmlChar ** $atts --> void) is native(LIB) {*};
    sub xmlSAX2StartElementNs(Pointer $ctx, xmlCharP $localname, xmlCharP $prefix, xmlCharP $URI, int32 $nb_namespaces, const xmlChar ** $namespaces, int32 $nb_attributes, int32 $nb_defaulted, const xmlChar ** $attributes --> void) is native(LIB) {*};
    sub xmlSAX2UnparsedEntityDecl(Pointer $ctx, xmlCharP $name, xmlCharP $publicId, xmlCharP $systemId, xmlCharP $notationName --> void) is native(LIB) {*};
    sub xmlSAXDefaultVersion(int32 $version --> int32) is native(LIB) {*};
    sub xmlSAXVersion(xmlSAXHandler * $hdlr, int32 $version --> int32) is native(LIB) {*};
