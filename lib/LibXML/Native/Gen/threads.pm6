use v6;
#  -- DO NOT EDIT --
# generated by: etc/generator.p6 

unit module LibXML::Native::Gen::threads;
# interfaces for thread handling:
#    set of generic threading related routines should work with pthreads, Windows native or TLS threads 
use LibXML::Native::Defs :LIB, :XmlCharP;

struct xmlMutex is repr('CPointer') {
    sub xmlNewMutex( --> xmlMutex) is native(LIB) {*};
    method xmlFreeMutex( --> void) is native(LIB) {*};
    method xmlMutexLock( --> void) is native(LIB) {*};
    method xmlMutexUnlock( --> void) is native(LIB) {*};
}

struct xmlRMutex is repr('CPointer') {
    sub xmlNewRMutex( --> xmlRMutex) is native(LIB) {*};
    method xmlFreeRMutex( --> void) is native(LIB) {*};
    method xmlRMutexLock( --> void) is native(LIB) {*};
    method xmlRMutexUnlock( --> void) is native(LIB) {*};
}
    sub xmlCleanupThreads( --> void) is native(LIB) {*};
    sub xmlDllMain(Pointer $hinstDLL, unsigned long $fdwReason, Pointer $lpvReserved --> int32) is native(LIB) {*};
    sub xmlGetThreadId( --> int32) is native(LIB) {*};
    sub xmlInitThreads( --> void) is native(LIB) {*};
    sub xmlIsMainThread( --> int32) is native(LIB) {*};
    sub xmlLockLibrary( --> void) is native(LIB) {*};
    sub xmlUnlockLibrary( --> void) is native(LIB) {*};
