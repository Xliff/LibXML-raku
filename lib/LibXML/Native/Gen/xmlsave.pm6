use v6;
#  -- DO NOT EDIT --
# generated by: etc/generator.p6 

unit module LibXML::Native::Gen::xmlsave;
# the XML document serializer:
#    API to save document or subtree of document 
use LibXML::Native::Defs :LIB, :XmlCharP;

enum xmlSaveOption is export {
    XML_SAVE_AS_HTML => 64,
    XML_SAVE_AS_XML => 32,
    XML_SAVE_FORMAT => 1,
    XML_SAVE_NO_DECL => 2,
    XML_SAVE_NO_EMPTY => 4,
    XML_SAVE_NO_XHTML => 8,
    XML_SAVE_WSNONSIG => 128,
    XML_SAVE_XHTML => 16,
}

struct xmlSaveCtxt is repr('CPointer') {
    sub xmlSaveToFd(int32 $fd, Str $encoding, int32 $options --> xmlSaveCtxt) is native(LIB) {*};
    sub xmlSaveToFilename(Str $filename, Str $encoding, int32 $options --> xmlSaveCtxt) is native(LIB) {*};
    sub xmlSaveToIO(xmlOutputWriteCallback $iowrite, xmlOutputCloseCallback $ioclose, Pointer $ioctx, Str $encoding, int32 $options --> xmlSaveCtxt) is native(LIB) {*};
    method xmlSaveClose( --> int32) is native(LIB) {*};
    method xmlSaveDoc(xmlDoc $doc --> long) is native(LIB) {*};
    method xmlSaveFlush( --> int32) is native(LIB) {*};
    method xmlSaveSetAttrEscape(xmlCharEncodingOutputFunc $escape --> int32) is native(LIB) {*};
    method xmlSaveSetEscape(xmlCharEncodingOutputFunc $escape --> int32) is native(LIB) {*};
    method xmlSaveTree(xmlNode $node --> long) is native(LIB) {*};
}
